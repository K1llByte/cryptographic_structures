

# This file was *autogenerated* from the file test.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1000 = Integer(1000); _sage_const_3 = Integer(3); _sage_const_1500 = Integer(1500); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0)#N = 509
#p = 3
#log_q = 11
#q = 1 << log_q # 2048


N = next_prime(_sage_const_1000 )
p = _sage_const_3 
q = next_prime(_sage_const_1500 )

_Z = ZZ['w']; (w,) = _Z._first_ngens(1)
R = QuotientRing(_Z , _Z.ideal(w**N - _sage_const_1 ), names=('w',)); (w,) = R._first_ngens(1)
#print(R)

_Q = Integers(q)['w']; (w,) = _Q._first_ngens(1)
Rq = QuotientRing(_Q , _Q.ideal(w**N - _sage_const_1 ), names=('w',)); (w,) = Rq._first_ngens(1)

def random_polyS3():
    return [choice([-_sage_const_1 ,_sage_const_0 ,_sage_const_1 ]) for i in range(N)]

_f = random_polyS3()
# print(list(_f))
f = Rq(_f)
print(list(f))
print()
# print(list(f.inverse_of_unit()))

# fp = [ lift(Mod(a,3)) for a in f ]
# print(list(fp))

