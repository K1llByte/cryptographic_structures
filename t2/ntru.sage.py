

# This file was *autogenerated* from the file ntru.sage
from sage.all_cmdline import *   # import sage library

_sage_const_0 = Integer(0); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_7 = Integer(7); _sage_const_29 = Integer(29); _sage_const_491531 = Integer(491531); _sage_const_3 = Integer(3); _sage_const_4 = Integer(4); _sage_const_5 = Integer(5); _sage_const_6 = Integer(6)
Z = PolynomialRing(ZZ,'w')
w = Z.gen()

msg = 'Hello Cruel World!'

def int_to_poly(c):
    poly = _sage_const_0 
    i = _sage_const_0 
    while (_sage_const_2 **i <= c):
        poly += ((c >> i) % _sage_const_2 )*w**i
        i += _sage_const_1 
    return poly


def msgs_to_polys(msg):
    return [int_to_poly(ord(c)) for c in msg]

class NTRU:
    def __init__(self,N,p,q):
        pass


####################################################

print(msgs_to_polys(msg))

bob = NTRU(_sage_const_7 ,_sage_const_29 ,_sage_const_491531 )
f = +w**_sage_const_0  -w**_sage_const_1  -w**_sage_const_3  +w**_sage_const_4  +w**_sage_const_5 
g = -w**_sage_const_0  +w**_sage_const_3  +w**_sage_const_4  -w**_sage_const_6 

print("f",f)
print("g",g)

